/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.12.v201801251438.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/commonapi/examples/E02AttributesDBusProxy.hpp>

namespace v1 {
namespace commonapi {
namespace examples {

std::shared_ptr<CommonAPI::DBus::DBusProxy> createE02AttributesDBusProxy(
    const CommonAPI::DBus::DBusAddress &_address,
    const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection) {
    return std::make_shared< E02AttributesDBusProxy>(_address, _connection);
}

void initializeE02AttributesDBusProxy() {
     CommonAPI::DBus::Factory::get()->registerProxyCreateMethod(
        E02Attributes::getInterface(),
        &createE02AttributesDBusProxy);
}

INITIALIZER(registerE02AttributesDBusProxy) {
    CommonAPI::DBus::Factory::get()->registerInterface(initializeE02AttributesDBusProxy);
}

E02AttributesDBusProxy::E02AttributesDBusProxy(
    const CommonAPI::DBus::DBusAddress &_address,
    const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection)
    :   CommonAPI::DBus::DBusProxy(_address, _connection)
,        x_(*this, "onXAttributeChanged", "setXAttribute", "i", "getXAttribute", static_cast< CommonAPI::DBus::IntegerDeployment* >(nullptr)),
        a1_(*this, "onA1AttributeChanged", "setA1Attribute", "(s(ibd))", "getA1Attribute", static_cast< ::v1::commonapi::examples::CommonTypes_::a1StructDeployment_t* >(nullptr))
{
}

      E02AttributesDBusProxy::XAttribute& E02AttributesDBusProxy::getXAttribute() {
          return x_;
      }
      E02AttributesDBusProxy::A1Attribute& E02AttributesDBusProxy::getA1Attribute() {
          return a1_;
      }




void E02AttributesDBusProxy::getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const {
          ownVersionMajor = 1;
          ownVersionMinor = 0;
      }

      } // namespace examples
      } // namespace commonapi
      } // namespace v1
